// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: sprite-vs:vert
      frag: sprite-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        alphaThreshold: { value: 0.5 }
        dissolve: { value: white, editor: {tooltip: 'dissolve map'}}
        dissolveThreshold: { value: 0.5, editor: {min: 0,max: 1,step: 0.01, slide: true}}
}%

CCProgram sprite-vs %{
  precision highp float;
  #include <cc-global>
  #if USE_LOCAL
    #include <cc-local>
  #endif
  #if SAMPLE_FROM_RT
    #include <common>
  #endif
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 color;
  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);
    // 由用户决定是否由GPU计算世界坐标(sprite，label默认使用GPR计算世界坐标)
    #if USE_LOCAL
      pos = cc_matWorld * pos;
    #endif

    pos = cc_matViewProj * pos;
    uv0 = a_texCoord;
    color = a_color;

    return pos;
  }
}%

CCProgram sprite-fs %{
  precision highp float;
  #include <alpha-test>

  in vec4 color;

  #if USE_TEXTURE
    in vec2 uv0;
    #pragma builtin(local)
    layout(set = 2, binding = 10) uniform sampler2D cc_spriteTexture;

    uniform sampler2D dissolve;
  #endif

  uniform Dissolves {
    float dissolveThreshold;
  };

  vec4 frag () {
    vec4 o = vec4(1, 1, 1, 1);

    float value = 1.0;

    // 先处理噪声图，随机选择rgb一个通道
    #if USE_TEXTURE
      vec4 dissolveMap = texture(dissolve,uv0);
      value *= dissolveMap.r;
    #endif

    // 如果这个值小于溶解阈值，则丢弃
    if (value < dissolveThreshold) {
      discard;
    }

    #if USE_TEXTURE
      o *= texture(cc_spriteTexture, uv0);
    #endif

    o *= color;
    ALPHA_TEST(o);

    // 在临近溶解阈值的地方设置边缘过渡色(用橘色);
    if (value < dissolveThreshold + 0.05) {
      o = vec4(0.5,1,0,o.a);
    }

    return o;
  }
}%
